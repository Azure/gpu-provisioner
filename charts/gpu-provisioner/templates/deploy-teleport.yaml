# Builds/Installs mirror from source
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsenter-actions
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gpu-provisioner.labels" . | nindent 4 }}
    app: nsenter
  {{- with .Values.additionalAnnotations }}
  annotations:
      {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  teleportinstall: |
    #!/usr/bin/env bash
    set -xe

    if [[ -f /opt/sentinel ]]; then
       if [[ ! -z "$1" ]]; then
         echo "received positional argument, forcing cleanup"
         rm /opt/sentinel || true
       else
         echo "Already ran, exiting"
         exit 0
       fi
    fi
    sudo apt-get update

    pushd /tmp || exit 1
    UBUNTU_RELEASE=$(lsb_release -r -s)
    UBUNTU_VERSION_CLEANED="${UBUNTU_RELEASE//.}"
    # download acr-mirror proxy
    MIRROR_PROXY_VERSION='18'
    MIRROR_PROXY_URL="https://acrmirrordev.blob.core.windows.net/bin/Release-${MIRROR_PROXY_VERSION}/acr-mirror-${UBUNTU_VERSION_CLEANED}.deb"

    wget $MIRROR_PROXY_URL
    sudo apt-get install './acr-mirror-2204.deb' -y
    rm './acr-mirror-2204.deb'
    popd

    # These libraries are needed for overlaybd-tcmu
    sudo /opt/acr/tools/overlaybd/install.sh
    sudo /opt/acr/tools/overlaybd/enable-http-auth.sh
    modprobe target_core_user
    sudo /opt/acr/tools/overlaybd/enable.sh

    # Adjust for large images
    sed '9s/4/200,/' -i /etc/overlaybd/overlaybd.json
    sed '10 i \    \"refillSize\": 52428800' -i /etc/overlaybd/overlaybd.json
    systemctl restart acr-mirror
    systemctl restart overlaybd-tcmu

    # Enabling mirror for teleportmetricstest
    curl -X PUT 'localhost:8578/config?ns=default&stream_format=overlaybd&enable_containerd=true'

    touch /opt/sentinel
    systemctl restart containerd
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: &name teleportinstall
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gpu-provisioner.labels" . | nindent 4 }}
    app: *name
  {{- with .Values.additionalAnnotations }}
  annotations:
      {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/cluster
                operator: Exists
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
              - key: karpenter.sh/provisioner-name
                operator: Exists
              - key: gpu-provisioner.sh/machine-type
                operator: Exists
      tolerations:
        # Allow this pod to be rescheduled while the node is in "critical add-ons only" mode.
        # This, along with the annotation above marks this pod as a critical add-on.
        - key: CriticalAddonsOnly
          operator: Exists
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
        - key: "sku"
          operator: "Equal"
          value: "gpu"
          effect: "NoSchedule"
      hostNetwork: true
      hostPID: true
      containers:
      - image: docker.io/alexeldeib/nsenter:latest
        imagePullPolicy: Always
        name: *name
        args: ["teleportinstall"]
        resources:
          requests:
            cpu: 0.5
            memory: 2000Mi
          limits:
            cpu: 0.5
            memory: 2000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - name: actions
          mountPath: "/opt/actions"
        - name: hostmount
          mountPath: "/mnt/actions"
      volumes:
        - name: hostmount
          hostPath:
            path: /opt/actions
            type: DirectoryOrCreate
        - name: actions
          configMap:
            name: nsenter-actions
