//go:build !ignore_autogenerated

/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package fake

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/service/ec2"
)

// GENERATED FILE. DO NOT EDIT DIRECTLY.
// Update hack/code/instancetype_testdata_gen.go and re-generate to edit
// You can add instance types by adding to the --instance-types CLI flag

var defaultDescribeInstanceTypesOutput = &ec2.DescribeInstanceTypesOutput{
	InstanceTypes: []*ec2.InstanceTypeInfo{
		{
			InstanceType:                  aws.String("c6g.large"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"arm64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(2),
				DefaultVCpus: aws.Int64(2),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(4096),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(3),
				Ipv4AddressesPerInterface:    aws.Int64(10),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(3),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("dl1.24xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(48),
				DefaultVCpus: aws.Int64(96),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(786432),
			},
			GpuInfo: &ec2.GpuInfo{
				Gpus: []*ec2.GpuDeviceInfo{
					{
						Name:         aws.String("Gaudi HL-205"),
						Manufacturer: aws.String("Habana"),
						Count:        aws.Int64(8),
						MemoryInfo: &ec2.GpuDeviceMemoryInfo{
							SizeInMiB: aws.Int64(32768),
						},
					},
				},
			},
			InstanceStorageInfo: &ec2.InstanceStorageInfo{NvmeSupport: aws.String("required"),
				TotalSizeInGB: aws.Int64(4000),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(60),
				Ipv4AddressesPerInterface:    aws.Int64(50),
				EncryptionInTransitSupported: aws.Bool(true),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(15),
					},
					{
						NetworkCardIndex:         aws.Int64(1),
						MaximumNetworkInterfaces: aws.Int64(15),
					},
					{
						NetworkCardIndex:         aws.Int64(2),
						MaximumNetworkInterfaces: aws.Int64(15),
					},
					{
						NetworkCardIndex:         aws.Int64(3),
						MaximumNetworkInterfaces: aws.Int64(15),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("g4dn.8xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(16),
				DefaultVCpus: aws.Int64(32),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(131072),
			},
			GpuInfo: &ec2.GpuInfo{
				Gpus: []*ec2.GpuDeviceInfo{
					{
						Name:         aws.String("T4"),
						Manufacturer: aws.String("NVIDIA"),
						Count:        aws.Int64(1),
						MemoryInfo: &ec2.GpuDeviceMemoryInfo{
							SizeInMiB: aws.Int64(16384),
						},
					},
				},
			},
			InstanceStorageInfo: &ec2.InstanceStorageInfo{NvmeSupport: aws.String("required"),
				TotalSizeInGB: aws.Int64(900),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(4),
				Ipv4AddressesPerInterface:    aws.Int64(15),
				EncryptionInTransitSupported: aws.Bool(true),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(4),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("inf1.2xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(4),
				DefaultVCpus: aws.Int64(8),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(16384),
			},
			InferenceAcceleratorInfo: &ec2.InferenceAcceleratorInfo{
				Accelerators: []*ec2.InferenceDeviceInfo{
					{
						Name:         aws.String("Inferentia"),
						Manufacturer: aws.String("AWS"),
						Count:        aws.Int64(1),
					},
				},
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(4),
				Ipv4AddressesPerInterface:    aws.Int64(10),
				EncryptionInTransitSupported: aws.Bool(true),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(4),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("inf1.6xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(12),
				DefaultVCpus: aws.Int64(24),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(49152),
			},
			InferenceAcceleratorInfo: &ec2.InferenceAcceleratorInfo{
				Accelerators: []*ec2.InferenceDeviceInfo{
					{
						Name:         aws.String("Inferentia"),
						Manufacturer: aws.String("AWS"),
						Count:        aws.Int64(4),
					},
				},
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(8),
				Ipv4AddressesPerInterface:    aws.Int64(30),
				EncryptionInTransitSupported: aws.Bool(true),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(8),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("m5.large"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(1),
				DefaultVCpus: aws.Int64(2),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(8192),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(3),
				Ipv4AddressesPerInterface:    aws.Int64(10),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(3),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("m5.metal"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(true),
			Hypervisor:                    aws.String(""),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(48),
				DefaultVCpus: aws.Int64(96),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(393216),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(15),
				Ipv4AddressesPerInterface:    aws.Int64(50),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(15),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("m5.xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(2),
				DefaultVCpus: aws.Int64(4),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(16384),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(4),
				Ipv4AddressesPerInterface:    aws.Int64(15),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(4),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("m6idn.32xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(64),
				DefaultVCpus: aws.Int64(128),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(524288),
			},
			InstanceStorageInfo: &ec2.InstanceStorageInfo{NvmeSupport: aws.String("required"),
				TotalSizeInGB: aws.Int64(7600),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(14),
				Ipv4AddressesPerInterface:    aws.Int64(50),
				EncryptionInTransitSupported: aws.Bool(true),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(7),
					},
					{
						NetworkCardIndex:         aws.Int64(1),
						MaximumNetworkInterfaces: aws.Int64(7),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("p3.8xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("xen"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(16),
				DefaultVCpus: aws.Int64(32),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(249856),
			},
			GpuInfo: &ec2.GpuInfo{
				Gpus: []*ec2.GpuDeviceInfo{
					{
						Name:         aws.String("V100"),
						Manufacturer: aws.String("NVIDIA"),
						Count:        aws.Int64(4),
						MemoryInfo: &ec2.GpuDeviceMemoryInfo{
							SizeInMiB: aws.Int64(16384),
						},
					},
				},
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(8),
				Ipv4AddressesPerInterface:    aws.Int64(30),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(8),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("t3.large"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(true),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(1),
				DefaultVCpus: aws.Int64(2),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(8192),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(3),
				Ipv4AddressesPerInterface:    aws.Int64(12),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(3),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("t4g.medium"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(true),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"arm64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(2),
				DefaultVCpus: aws.Int64(2),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(4096),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(3),
				Ipv4AddressesPerInterface:    aws.Int64(6),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(3),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("t4g.small"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(true),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"arm64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(2),
				DefaultVCpus: aws.Int64(2),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(2048),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(3),
				Ipv4AddressesPerInterface:    aws.Int64(4),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(3),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("t4g.xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(true),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"arm64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(4),
				DefaultVCpus: aws.Int64(4),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(16384),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(4),
				Ipv4AddressesPerInterface:    aws.Int64(15),
				EncryptionInTransitSupported: aws.Bool(false),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(4),
					},
				},
			},
		},
		{
			InstanceType:                  aws.String("trn1.2xlarge"),
			SupportedUsageClasses:         aws.StringSlice([]string{"on-demand", "spot"}),
			SupportedVirtualizationTypes:  aws.StringSlice([]string{"hvm"}),
			BurstablePerformanceSupported: aws.Bool(false),
			BareMetal:                     aws.Bool(false),
			Hypervisor:                    aws.String("nitro"),
			ProcessorInfo: &ec2.ProcessorInfo{
				SupportedArchitectures: aws.StringSlice([]string{"x86_64"}),
			},
			VCpuInfo: &ec2.VCpuInfo{
				DefaultCores: aws.Int64(4),
				DefaultVCpus: aws.Int64(8),
			},
			MemoryInfo: &ec2.MemoryInfo{
				SizeInMiB: aws.Int64(32768),
			},
			InstanceStorageInfo: &ec2.InstanceStorageInfo{NvmeSupport: aws.String("required"),
				TotalSizeInGB: aws.Int64(474),
			},
			NetworkInfo: &ec2.NetworkInfo{
				MaximumNetworkInterfaces:     aws.Int64(4),
				Ipv4AddressesPerInterface:    aws.Int64(15),
				EncryptionInTransitSupported: aws.Bool(true),
				DefaultNetworkCardIndex:      aws.Int64(0),
				NetworkCards: []*ec2.NetworkCardInfo{
					{
						NetworkCardIndex:         aws.Int64(0),
						MaximumNetworkInterfaces: aws.Int64(4),
					},
				},
			},
		},
	},
}
