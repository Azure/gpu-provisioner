# Two provisioners (higher weight = higher priority)
# dv2: weight 10, cpu 600 = 300 VMs
# dv3: weight  5, cpu 400 = 200 VMs
# (don't forget to delete the default Provisioner, if any!)

# This example provisioner will provision general purpose instances
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: dv2
spec:
  weight: 10

  # consolidation:
  #  enabled: true

  ttlSecondsAfterEmpty: 3600
  # ttlSecondsUntilExpired: 86400   # one day

  limits:
    resources:
      cpu: 600 # for 300 Vms

  requirements:
  # D series with premium storage
  - key: karpenter.k8s.azure/sku-family
    operator: In
    values: [D]
  - key: karpenter.k8s.azure/sku-version
    operator: In
    values: ['v2']
  - key: karpenter.k8s.azure/sku-storage-premium-capable
    operator: In
    values: ['true']
  - key: karpenter.k8s.azure/sku-storage-os-ephemeral-capable
    operator: In
    values: ['true']
  - key: karpenter.k8s.azure/sku-subfamily
    operator: NotIn
    values: ['C'] # exclude confidential

  # exclude very large SKUs (32+ vCPU)
  - key: karpenter.k8s.azure/sku-cpu
    operator: Lt
    values: ["3"]

  # allow spot
  - key: kubernetes.sh/capacity-type
    operator: In
    values: [spot,regular]

   # currently provisioning nodes with EnableAcceleratedNetworking:true, so need SKUs capable of that
  - key: karpenter.k8s.azure/sku-networking-accelerated
    operator: In
    values: ['true']

  providerRef:
    name: default
---
# This example provisioner will provision general purpose instances
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: dv3
spec:
  weight: 5

  # consolidation:
  #  enabled: true

  ttlSecondsAfterEmpty: 3600
  # ttlSecondsUntilExpired: 86400   # one day

  limits:
    resources:
      cpu: 400 # for 200 Vms

  requirements:
  # D series with premium storage
  - key: karpenter.k8s.azure/sku-family
    operator: In
    values: [D]
  - key: karpenter.k8s.azure/sku-version
    operator: In
    values: ['v3']
  - key: karpenter.k8s.azure/sku-storage-premium-capable
    operator: In
    values: ['true']
  - key: karpenter.k8s.azure/sku-storage-os-ephemeral-capable
    operator: In
    values: ['true']
  - key: karpenter.k8s.azure/sku-subfamily
    operator: NotIn
    values: ['C'] # exclude confidential

  # exclude very large SKUs (32+ vCPU)
  - key: karpenter.k8s.azure/sku-cpu
    operator: Lt
    values: ["3"]

  # allow spot
  - key: kubernetes.sh/capacity-type
    operator: In
    values: [spot,regular]

   # currently provisioning nodes with EnableAcceleratedNetworking:true, so need SKUs capable of that
  - key: karpenter.k8s.azure/sku-networking-accelerated
    operator: In
    values: ['true']

  providerRef:
    name: default
---
apiVersion: karpenter.k8s.azure/v1alpha1
kind: NodeTemplate
metadata:
  name: default
spec: {}